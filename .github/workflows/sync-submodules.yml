name: Sync Submodules and Mirror

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  sync-and-mirror:
    runs-on: ubuntu-latest

    steps:
      - name: Start workflow
        run: echo "Workflow triggered successfully!"
      - name: Checkout parent repo and submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.SUBMODULE_ACCESS_TOKEN }} 

      - name: Set Git identity
        run: |
          echo "Setting up Git identity..."
          git config --global user.name "GitHub Action"
          git config --global user.email "abhishekhsaini7@gmail.com"

      # - name: Checkout Submodules
      #   uses: actions/checkout@v3
      #   with:
      #     submodules: 'true'
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     fetch-depth: 0
      - name: Authenticate with GitHub
        run: |
          git config --global url."https://${{ secrets.SUBMODULE_ACCESS_TOKEN }}@github.com/".insteadOf "https://github.com/"
      - name: Show working directory
        run: pwd

      - name: List files
        run: ls -la

      - name: Show Git branch
        run: git branch

      - name: Update Submodules
        run: |
          git submodule update --init --recursive



      # - name: Rewrite submodule URLs with token (if secret is set)
      #   env:
      #     SUBMODULE_PAT: ${{ secrets.SUBMODULE_ACCESS_TOKEN }}
      #   run: |
      #     echo "Checking for submodule access token..."
      #     if [ -n "$SUBMODULE_PAT" ]; then
      #       echo "Injecting token into .gitmodules..."
      #       sed -i "s|https://github.com/|https://x-access-token:${SUBMODULE_PAT}@github.com/|g" .gitmodules
      #       git submodule sync
      #       git submodule update --init --recursive
      #     else
      #       echo "No submodule token provided. Assuming public or same-org private access.."
      #     fi

      - name: Check which submodules changed (optional logging)
        run: |
          echo "Checking for changes in submodules..."
          git submodule foreach 'echo "--- $name ---"; git status; git diff'

      - name: Run code checks (replace this block as needed)
        run: |
          echo "Running sample code checks..."
          # Add real checks here, like:
          # npm ci && npm run lint
          # mvn verify
          echo "Checks passed."

      - name: Print token prefix (safe)
        run: |
          PARTIAL=${TARGET_TOKEN:0:9}
          echo "Target token prefix: ${PARTIAL}****"
          echo "Git remote set (token redacted in log)"
        env:
          TARGET_TOKEN: ${{ secrets.TARGET_REPO_TOKEN }}

      - name: Set Another Git identity
        run: |
          echo "Setting up Another Git identity..."
          git config --global user.name "abhishek2acc"
          git config --global user.email "abhishek2acc"

      - name: Test Adobe Git Remote
        env:
          ACM_USERNAME: ${{ secrets.MIRROR_USERNAME }}
          ACM_PASSWORD: ${{ secrets.MIRROR_PAT }}
        run: |
          git ls-remote "https://${{ secrets.TARGET_REPO_TOKEN }}@github.com/abhishek2acc/repo-tp-pull-content.git"
          echo "Adobe Git remote test successful."


      # - name: Push to mirror repo
      #   env:
      #     TARGET_TOKEN: ${{ secrets.TARGET_REPO_TOKEN }}
      #   run: |
      #     echo "Pushing to mirror repository..."
      #     echo "TARGET_REPO_TOKEN: ${TARGET_TOKEN:0:9}****"
      #     PARTIAL_TOKEN=${TARGET_TOKEN:0:9}
      #     echo "Remote: https://x-access-token:$PARTIAL_TOKEN****@github.com/abhishek2acc/repo-tp-pull-content.git"
      #     git remote add mirror https://x-access-token:${TARGET_TOKEN}@github.com/abhishek2acc/repo-tp-pull-content.git
      #     git push mirror main --force
